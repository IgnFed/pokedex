{"version":3,"sources":["Components/Styles/CardStylesTypes.module.css","Components/Card.jsx","Components/Spinn.jsx","Components/Services/Services.jsx","App.js","index.js","Components/Styles/CardStyle.module.css","Components/Styles/Spinn.module.css"],"names":["module","exports","Tarjeta","props","className","styles","section","allContentCardContainer","cardContainer","containerImage","src","image","alt","pokeName","lazy","containerContent","bgred","type","length","map","item","inx","name","types","fire","water","bug","poison","grass","electric","psychic","ghost","ice","rock","ground","fighting","steel","normal","fairy","flying","unicType","default","pokeId","Spinn","spinContainer","circle","getPokemons","a","fetch","recive","json","data","getPokemonData","url","App","useState","pokemon","setPokemon","spin","setSpin","fetchPokemons","promises","results","pokemons","Promise","all","console","log","useEffect","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6d6b809.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fire\":\"CardStylesTypes_fire__3rZzw\",\"water\":\"CardStylesTypes_water__2-ZMt\",\"bug\":\"CardStylesTypes_bug__1to9R\",\"flying\":\"CardStylesTypes_flying__rM-GK\",\"poison\":\"CardStylesTypes_poison__3nywo\",\"grass\":\"CardStylesTypes_grass__2Et5J\",\"electric\":\"CardStylesTypes_electric__36CoS\",\"psychic\":\"CardStylesTypes_psychic__53vko\",\"ghost\":\"CardStylesTypes_ghost__2aSzF\",\"ice\":\"CardStylesTypes_ice__231Np\",\"rock\":\"CardStylesTypes_rock__1QVm5\",\"ground\":\"CardStylesTypes_ground__2otHT\",\"fighting\":\"CardStylesTypes_fighting__34TGE\",\"steel\":\"CardStylesTypes_steel__39W8n\",\"normal\":\"CardStylesTypes_normal__3V08Y\",\"fairy\":\"CardStylesTypes_fairy__3Cfj9\"};","import React from 'react'\r\nimport styles from './Styles/CardStyle.module.css'\r\nimport types from './Styles/CardStylesTypes.module.css'\r\n\r\nexport const Tarjeta = (props)=>{\r\n\r\n      return (\r\n            \r\n\r\n            <div>\r\n                  \r\n                  \r\n\r\n\r\n                  <section className={styles.section}>\r\n\r\n                        <div className={styles.allContentCardContainer}>\r\n                              <div className={styles.cardContainer}>\r\n\r\n                                    <div className={styles.containerImage}>\r\n                                                <img src={props.image} alt={props.pokeName} lazy=\"true\" />\r\n                                          <span></span>      \r\n                                    </div>\r\n                                    \r\n                                          <div className={styles.containerContent}>\r\n                                          <p className={styles.bgred}>Pokemon: {props.pokeName}  </p>\r\n                                         \r\n                                          {\r\n                                                props.type.length > 1 ? (\r\n\r\n\r\n                                                      props.type.map((item, inx) =>(\r\n\r\n                                                            \r\n                                                            <p \r\n                                                            key = {inx}\r\n                                                            className={\r\n                                                                 `\r\n                                                                  ${item.type.name === \"fire\" ? (types.fire) :\r\n                                                                  \r\n                                                                  item.type.name === \"water\" ? (types.water):\r\n                                                                  \r\n                                                                  item.type.name === \"bug\" ? (types.bug):\r\n\r\n                                                                  item.type.name === \"poison\" ? (types.poison):\r\n\r\n                                                                  item.type.name === \"grass\" ? (types.grass):\r\n                                                                  \r\n                                                                  item.type.name === \"electric\" ? (types.electric):\r\n\r\n                                                                  item.type.name === \"psychic\" ? (types.psychic):\r\n\r\n                                                                  item.type.name === \"ghost\" ? (types.ghost):\r\n\r\n                                                                  item.type.name === \"ice\" ? (types.ice):\r\n\r\n                                                                  item.type.name === \"rock\" ? (types.rock):\r\n                                                                  \r\n                                                                  item.type.name === \"ground\" ? (types.ground):\r\n\r\n                                                                  item.type.name === \"fighting\" ? (types.fighting):\r\n\r\n                                                                  item.type.name === \"steel\" ? (types.steel):\r\n\r\n                                                                  item.type.name === \"normal\" ? (types.normal):\r\n\r\n                                                                  item.type.name === \"fairy\" ? (types.fairy):\r\n\r\n\r\n                                                                  item.type.name === \"flying\" ? (types.flying):\r\n\r\n                                                                  (null)}\r\n                                                                  `\r\n                                    \r\n\r\n                                                                  \r\n                                                            }>\r\n                                                                  \r\n                                                                  \r\n                                                            Type {inx  + 1}: {item.type.name}</p>\r\n\r\n                                                      ))\r\n\r\n                                                ):\r\n                                                (      \r\n                                                      props.type.map((item) =>(\r\n\r\n                                                            \r\n                                                            <p \r\n                                                            key = {item}\r\n                                                            className={\r\n                                                                  `\r\n                                                                  ${styles.unicType}\r\n                                                                  ${item.type.name === \"fire\" ? (types.fire) :\r\n                                                                  \r\n                                                                  item.type.name === \"water\" ? (types.water):\r\n                                                                  \r\n                                                                  item.type.name === \"bug\" ? (types.bug):\r\n\r\n                                                                  item.type.name === \"poison\" ? (types.poison):\r\n\r\n                                                                  item.type.name === \"grass\" ? (types.grass):\r\n                                                                  \r\n                                                                  item.type.name === \"electric\" ? (types.electric):\r\n\r\n                                                                  item.type.name === \"psychic\" ? (types.psychic):\r\n\r\n                                                                  item.type.name === \"ghost\" ? (types.ghost):\r\n\r\n                                                                  item.type.name === \"ice\" ? (types.ice):\r\n\r\n                                                                  item.type.name === \"rock\" ? (types.rock):\r\n                                                                  \r\n                                                                  item.type.name === \"ground\" ? (types.ground):\r\n\r\n                                                                  item.type.name === \"fighting\" ? (types.fighting):\r\n\r\n                                                                  item.type.name === \"steel\" ? (types.steel):\r\n\r\n                                                                  item.type.name === \"normal\" ? (types.normal):\r\n\r\n                                                                  item.type.name === \"fairy\" ? (types.fairy):\r\n\r\n\r\n                                                                  (types.default)}\r\n                                                                  `\r\n                                    \r\n\r\n                                                                  \r\n                                                            }>\r\n                                                                  \r\n                                                                  \r\n                                                            Type 1: {item.type.name}</p>\r\n\r\n                                                      ))\r\n                                                )\r\n\r\n                                          }\r\n                                          <p className={styles.bgred}>ID: {props.pokeId} </p>\r\n                                         </div>\r\n                              </div>\r\n                        </div>\r\n\r\n                  </section>\r\n                  \r\n\r\n            </div>\r\n\r\n\r\n      )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './Styles/Spinn.module.css';\r\n\r\nexport const Spinn = () => {\r\n      return (\r\n           <>\r\n           \r\n\r\n                  <div className={styles.spinContainer}>\r\n\r\n                                                {/* CIRCLE  ,  SQUARE ,   BAR   */}\r\n\r\n                        <span className={styles.circle} ></span>\r\n\r\n                  </div>\r\n\r\n           </>\r\n      )\r\n}\r\n\r\n\r\n\r\n","export const getPokemons = async ()=>{\r\n\r\n   const recive = await fetch('https://pokeapi.co/api/v2/pokemon?limit=100&offset=0')  \r\n\r\n   const data = await recive.json()\r\n\r\n   return data\r\n}\r\n\r\nexport const getPokemonData = async (url)=>{\r\n\r\n   const recive = await fetch(url)\r\n\r\n   const data = await recive.json()\r\n\r\n   return data\r\n}","import React, {useState, useEffect}from \"react\";\nimport { Tarjeta} from './Components/Card';\nimport {Spinn} from './Components/Spinn'\n\nimport { getPokemons, getPokemonData} from './Components/Services/Services'\n\n// import {Searcher} from './Components/Searcher'\n\nexport const App = ()=>{\n\n  const [pokemon, setPokemon] = useState([]);\n  const [spin, setSpin] = useState(false);\n\n  const fetchPokemons = async ()=>{\n\n    try {\n\n      const data = await getPokemons()\n      const promises = data.results.map(async pokemons =>{\n\n        return await getPokemonData(pokemons.url)        \n      })\n\n      const results = await Promise.all(promises)\n      setPokemon([...results])\n    } catch (error) {\n\n      console.log(error)\n\n    }\n\n    setSpin(true);\n\n  }\n\n  useEffect(()=>{\n\n    fetchPokemons();\n  },[])\n\n  return (\n\n    <div className='container'>\n\n      <section >\n\n        <h1>POKEAPI</h1>\n\n      </section>\n   \n      {\n        /* \n          <section>\n            <Searcher add={()=>{add()}} del = {()=>{del(0)}}/>\n          </section>  \n        */\n      }\n        \n      <section>\n\n      {\n        spin ? \n        (\n            pokemon.map((item, index) => (\n\n              <div key={index + 1}>\n\n                <Tarjeta\n                  pokeId={index + 1}\n                  pokeName={item.name}\n                  url={item.url}\n                  image={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/${index + 1}.png`}\n                  type={item.types}\n                  />\n\n              </div>\n\n            ))\n        )\n\n        :\n\n        (\n          <Spinn/>\n        )\n      }          \n\n      </section>\n\n    </div>\n\n\n  )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Components/Styles/Generals.css'\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContentCardContainer\":\"CardStyle_allContentCardContainer__3K1Hg\",\"cardContainer\":\"CardStyle_cardContainer__lE8Zz\",\"containerImage\":\"CardStyle_containerImage__1fhGr\",\"containerContent\":\"CardStyle_containerContent__2DfoI\",\"unicType\":\"CardStyle_unicType__3XUqs\",\"bgred\":\"CardStyle_bgred__2yyUf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinContainer\":\"Spinn_spinContainer__2GM_R\",\"circle\":\"Spinn_circle__1nTzI\",\"loader1\":\"Spinn_loader1__Qw46j\",\"bar\":\"Spinn_bar__2w0kD\",\"loader2\":\"Spinn_loader2__1GBCz\",\"square\":\"Spinn_square__27IcH\",\"loader3\":\"Spinn_loader3__3EgvK\"};"],"sourceRoot":""}